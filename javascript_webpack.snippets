snippet webpack-basic "webpack basic setup" b
const path = require('path');
const webpack = require('webpack');

const config = {
  devtool: 'cheap-eval-source-map',
  context: path.resolve(__dirname, '${1:src}'),
  entry: {
    vendor:[$2],
    ${3:app}: './$3.js'
  },
  output: {
    path: path.resolve(__dirname, '${4:dist}'),
    filename: '[name].bundle.js',
  },
	resolve: {
		extensions: ['.js']
	},
	module: {
		rules: []
	},
	plugins: [
		new webpack.optimize.CommonsChunkPlugin({
			name: 'vendor'
		})
	]
};

module.exports = config;
endsnippet

snippet webpack-babel "webpack babel-loader"
{
	test: /\.jsx?$/,
	use: [
		{loader: 'eslint-loader'},
		{loader: 'babel-loader'}
	],
	exclude: /node_modules/
}
endsnippet

snippet webpack-sass "webpack with sass loaders"
{
	test: /.(scss|sass)$/,
	use: [
		{loader: 'style-loader'},
		{loader: 'css-loader'},
		{loader: 'sass-loader'}
	]
}
endsnippet

snippet webpack-fontawesome "webpack fontawesome loaders"
{
	test: /\.woff2?(\?v=[0-9]\.[0-9]\.[0-9])?$/,
	// Limiting the size of the woff fonts breaks font-awesome ONLY for the extract text plugin
	// loader: "url?limit=10000"
	use: "url-loader"
},
{
	test: /\.(ttf|eot|svg)(\?[\s\S]+)?$/,
	use: 'file-loader'
}
endsnippet
